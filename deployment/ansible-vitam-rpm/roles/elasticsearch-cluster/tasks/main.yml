---
#### Compute variables ####

- name: Update elasticsearch memory value if empty and total memory < 64 Go
  set_fact:
    elasticsearch_memory: "{{ (ansible_memory_mb.real.total / 2) | int }}m"
  when:
    - ansible_memory_mb.real.total < 65536
    - elasticsearch_memory == ""

- name: Update elasticsearch memory value if empty and total memory >= 64 Go (don't allocate more than 32 Go RAM - official recommandation)
  set_fact:
    elasticsearch_memory: "32g"
  when:
    - ansible_memory_mb.real.total >= 65536
    - elasticsearch_memory == ""


#### Elasticsearch installation ####

# Only prerequisite for Debian : install openjdk from jessie-backports
- name: install openjdk from jessie-backports only when Debian
  apt:
    name: openjdk-8-jdk-headless
    state: latest
    default_release: jessie-backports
  when: ansible_distribution == "Debian"

# tasks file for elasticsearch-cluster

- name: install vitam-{{cluster_name}} package
  package:
    name: vitam-{{cluster_name}}
    state: latest
  notify:
    - restart elasticsearch

- name: ensure /var/run/{{cluster_name}} exists
  file:
    path: "/var/run/{{cluster_name}}"
    owner: "{{ vitamdb_user }}"
    group: "{{ vitam_group }}"
    state: directory
    mode: "{{vitam_folder_permission}}"

- name: Disable standard Easticsearch service
  service:
    name: elasticsearch
    state: stopped
    enabled: no

- name: Add vitam-{{cluster_name}} autostart at boot
  service:
    name: "vitam-{{cluster_name}}"
    enabled: yes
  notify:
    - restart elasticsearch


#### Configuration ####

- name: Ensure elasticsearch directories exist
  file:
    path: "{{vitam_folder_root}}/{{item}}/{{cluster_name}}"
    owner: "{{ vitamdb_user }}"
    group: "{{ vitam_group }}"
    state: directory
    mode: "{{vitam_folder_permission}}"
  with_items:
    - conf
    - data
    - log
    - lib
  notify:
    - restart elasticsearch

- name: Ensure elasticsearch sysconfig directory exist
  file:
    path: "{{vitam_folder_root}}/conf/{{cluster_name}}/sysconfig"
    owner: "{{ vitamdb_user }}"
    group: "{{ vitam_group }}"
    state: directory
    mode: "{{vitam_folder_permission}}"
  notify:
    - restart elasticsearch

# KWA Question : is it still necessary with the systemd service ?
- name: Configure limits max_open_files for Elasticsearch
  lineinfile:
    dest: /etc/security/limits.conf
    regexp: '^{{ vitamdb_user }}     -    nofile    {{ elasticsearch_max_open_files }}'
    insertafter: EOF
    line: '{{ vitamdb_user }}     -    nofile    {{ elasticsearch_max_open_files }}'
  when: elasticsearch_max_open_files is defined
  notify:
    - restart elasticsearch

- name: apply elasticsearch configuration yml
  template:
    src: "elasticsearch.{{groupe}}.yml.j2"
    dest: "{{elasticsearch_conf_dir}}/elasticsearch.yml"
    owner: "{{ vitamdb_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  notify:
    - restart elasticsearch

- name: apply logging configuration yml
  template:
    src: "logging.yml.j2"
    dest: "{{elasticsearch_conf_dir}}/logging.yml"
    owner: "{{ vitamdb_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  notify:
    - restart elasticsearch

- name: apply elasticsearch sysconfig default
  template:
    src: "elasticsearch.j2"
    dest: "{{elasticsearch_conf_dir}}/sysconfig/elasticsearch"
    owner: "{{ vitamdb_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  notify:
    - restart elasticsearch

#### Elasticsearch systemd service configuration ####

# Cf. https://serverfault.com/questions/546966/whats-removing-stuff-from-var-run-at-reboots-from-a-fedora-machine
# Cf. https://www.freedesktop.org/software/systemd/man/tmpfiles.d.html
- name: add {{cluster_name}}.conf in tempfile.d
  template:
    src: "tempfile.d-elasticsearch.conf.j2"
    dest: "/usr/lib/tmpfiles.d/{{cluster_name}}.conf"
    owner: root
    group: root
    mode: 0644
  notify: create systemd tmpfiles

# KWA Note : another file should be added here :
# /usr/lib/sysctl.d/elasticsearch.conf
# with content :
# vm.max_map_count=262144


#### Consul service declaration ####

# TODO: ideally get the consul configuration path in a global configuration variable
- name: Ensure consul config dir is OK
  file:
    path: "{{consul_folder_conf}}"
    state: directory
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"

- name: Deploy consul agent service declaration
  template:
    src: "service-componentid.json.j2"
    dest: "{{ consul_folder_conf }}/service-{{ cluster_name }}.json"
    owner: "{{ vitam_user }}"
    group: "{{ vitam_group }}"
    mode: "{{vitam_conf_permission}}"
  notify:
   - reload consul configuration

- name: Ensure consul service is started
  service:
    name: "vitam-consul"
    state: started

- name: Ensure service is started
  service:
    name: "vitam-{{cluster_name}}"
    state: started

- name: install vitam-elasticsearch-kopf package
  package:
    name: vitam-elasticsearch-kopf
    state: latest
