---
- name: Install vitam-mongod package
  package:
    name: vitam-mongod
    state: latest
  notify:
    - restart mongod

- name: enable mongod
  service:
    name: vitam-mongod
    enabled: true
  notify:
    - restart mongod

#### Configuration ####

- name: Check that the directories exists (must be removed when the RPM plugin will be patched)
  file:
    path: "{{vitam_folder_root}}/{{ item }}/mongod"
    state: directory
    owner: "{{ vitamdb_user }}"
    group: "{{vitam_group}}"
    mode: "{{vitam_folder_permission}}"
  with_items:
    - app
    - bin
    - conf
    - data
    - lib
    - log
    - script
    - tmp
  notify:
    - restart mongod

- name: Create db directory
  file:
    path: "{{mongod_folder_database}}"
    owner: "{{vitamdb_user}}"
    group: "{{vitam_group}}"
    state: directory
    mode: "{{vitam_folder_permission}}"
  notify:
    - restart mongod

- name: Create the mongod configuration server file
  template:
    src: "mongod.conf.j2"
    dest: "{{mongo_config_path}}/mongod.conf"
    owner: "{{ vitamdb_user }}"
    mode: "{{vitam_conf_permission}}"
  notify:
    - restart mongod

#### Consul configuration ####

- name: Ensure consul config dir is OK
  file:
    path: "{{consul_folder_conf}}"
    state: directory
    owner: "{{vitam_user}}"
    group: "{{vitam_group}}"

- name: Deploy consul agent service declaration
  template:
    src: "service-componentid.json.j2"
    dest: "{{consul_folder_conf}}/service-mongod.json"
    owner: "{{vitam_user}}"
    group: "{{vitam_group}}"
    mode: "{{vitam_conf_permission}}"
  notify:
   - reload consul configuration


# Ensure that the installation is complete and consul up before contnuing...
- meta: flush_handlers

- name: Ensure service is started
  service:
    name: vitam-mongod
    state: started

#### Mongo online configuration ####
# Note : mongodb needs to be started for these elements to succeed

# Enable mongo passphrase

- name: Copy the passphrase
  template:
    src: "keyfile.j2"
    dest: "{{ mongo_config_path }}/keyfile"
    owner: "{{ vitamdb_user}}"
    group: "{{vitam_group}}"
    mode: 0600

# Now lest's initiate the replica set
# Do this only on the last node of the current shard
# Current shard: mongod-data[shard-id]

- name: Wait for the service port to be open
  wait_for: port={{mongod_port}} timeout="{{service_restart_timeout}}"
  when: inventory_hostname == "{{ groups['mongod']|last }}"

- name: Copy the script which initiate the replica set
  template:
    src: "init-replica.js.j2"
    dest: "{{vitam_folder_root}}/app/init-replica.js"
    owner: "{{vitamdb_user}}"
    group: "{{vitam_group}}"
    mode: "{{vitam_conf_permission}}"
  when: inventory_hostname == "{{ groups['mongod']|last }}"

- name: Initiate the replica set
  command: mongo --port {{mongod_port}} {{vitam_folder_root}}/app/init-replica.js
  when: inventory_hostname == "{{ groups['mongod']|last }}"
