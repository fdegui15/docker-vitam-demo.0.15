#### Packetbeat installation ###

- name: install libpcap (prerequisite for Packetbeat)
  package:
    name: libpcap
    state: latest
  when: (ansible_distribution == "CentOS" )

- name: install libpcap (prerequisite for Packetbeat)
  package:
    name: libpcap0.8
  when: (ansible_distribution == "Debian" )

# TODO Run packetbeat as a non-root user, using a specific user with full restrictions
- name: install Packetbeat
  package:
    name: packetbeat
    state: latest

- name: setup Packetbeat configuration file
  template:
    src: packetbeat.yml.j2
    dest: /etc/packetbeat/packetbeat.yml
    owner: root
    mode: 0644

- name: Fetch the packetbeat template file
  fetch:
    src: '/etc/packetbeat/packetbeat.template.json'
    dest: '/tmp/packetbeat/'
    flat: yes

- name: create packetbeat index
  when: "{{ (groups['hosts-log-server'] | length) > 0}}"
  uri:
    url: 'http://{{elasticsearch_log_host}}:{{elasticsearch_log_http_port}}/_template/packetbeat'
    method: PUT
    body: "{{ lookup('file', '/tmp/packetbeat/packetbeat.template.json') }}"
    body_format: json
    status_code: 200,201

- name: Erase temporary packetbeat template file
  file:
   path: '/tmp/packetbeat'
   state: absent

- name: load kibana dashboards to .kibana elasticsearch index
  when: "{{ (groups['hosts-log-server'] | length) > 0}}"
  uri:
    url: 'http://{{elasticsearch_log_host}}:{{elasticsearch_log_http_port}}/.kibana/{{item.split(".")[0] }}'
    method: PUT
    body: "{{ lookup('file', '{{item}}') }}"
    body_format: json
    status_code: 200, 201
  with_lines: find {{role_path}}/files/ -name '*.json' -type f | awk -F '/' '{print $(NF-1)"/"$NF}'

- name: restart Kibana
  when: "{{ (groups['hosts-log-server'] | length) > 0}}"
  service:
    name: kibana
    state: restarted
    enabled: true
  delegate_to: "{{groups['hosts-log-server'][0]}}"
  run_once: true

- name: add Packetbeat autostart at boot
  service:
    name: packetbeat
    enabled: yes
    state: started

  # TODO: change : virtualization_type is wrong here, we should assert if curator was indeed installed
- name: apply configuration files for curator
  template:
    src: "{{item}}.j2"
    dest: "{{curator_conf_dir}}/{{item}}"
    owner: logstash
  with_items:
    - "delete_index_packetbeat.yml"
  delegate_to: "{{groups['hosts-log-server'][0]}}"
  run_once: true
  when:
    - ansible_virtualization_type != 'docker'
    - "{{ (groups['hosts-log-server'] | length) > 0}}"

- name: create root crontab entry
  run_once: true
  delegate_to : "{{groups['hosts-log-server'][0]}}"
  cron:
    name="curator purge on packetbeat"
    minute="10"
    hour="0"
    user="root"
    job="/usr/bin/curator --config {{curator_conf_dir}}/curator.yml {{curator_conf_dir}}/delete_index_packetbeat.yml"
  when:
    - ansible_virtualization_type != 'docker'
    - "{{ (groups['hosts-log-server'] | length) > 0}}"
